// File: with_uart.v
// Generated by MyHDL 1.0dev
// Date: Sat Jul 16 15:53:37 2016


`timescale 1ns/10ps

module with_uart (
    clk,
    hex_freq,
    fpga_rx,
    fpga_tx,
    trigger,
    led2
);


input clk;
output [31:0] hex_freq;
reg [31:0] hex_freq;
input fpga_rx;
input fpga_tx;
input trigger;
output [8:0] led2;
reg [8:0] led2;

reg ready;
reg [6:0] sched_len;
wire [31:0] set_freq;
wire [31:0] freq_step;
wire [31:0] time_step;
wire [31:0] hold_time;
reg [7:0] sched_index;
wire reset;
wire notclock;
reg start;
reg done;
reg all_data_received;
wire trigger_reset;
reg [31:0] curr_freq;
reg add;
reg sub;
wire dec_clk;
reg [8:0] incr;
reg [7:0] whichram;
wire [31:0] biggestblock;
reg [1:0] state;
reg [7:0] rx_data;
wire drdy;
reg [7:0] freq_rambus_addr;
reg [7:0] fstep_rambus_addr;
reg [7:0] tstep_rambus_addr;
reg [7:0] hold_rambus_addr;
reg [6:0] freq_rambus_length;
reg [6:0] fstep_rambus_length;
reg [6:0] tstep_rambus_length;
reg [6:0] hold_rambus_length;
wire [31:0] freq_rambus_din;
wire [31:0] fstep_rambus_din;
wire [31:0] tstep_rambus_din;
wire [31:0] hold_rambus_din;
wire [31:0] freq_rambus_dout;
wire [31:0] fstep_rambus_dout;
wire [31:0] tstep_rambus_dout;
wire [31:0] hold_rambus_dout;
wire freq_rambus_clk;
wire fstep_rambus_clk;
wire tstep_rambus_clk;
wire hold_rambus_clk;
wire [6:0] freq_rambus_raddr;
wire [6:0] fstep_rambus_raddr;
wire [6:0] tstep_rambus_raddr;
wire [6:0] hold_rambus_raddr;
wire [6:0] freq_rambus_waddr;
wire [6:0] fstep_rambus_waddr;
wire [6:0] tstep_rambus_waddr;
wire [6:0] hold_rambus_waddr;
wire signed [30:0] m_manager_0_curr_freq;
reg signed [30:0] m_manager_0_set_freq_latch;
reg [29:0] m_manager_0_set_step_f_latch;
reg [29:0] m_manager_0_set_step_t_latch;
reg [29:0] m_manager_0_set_wait_latch;
reg signed [30:0] m_manager_0_set_freq_latch_int;
reg signed [30:0] m_manager_0_set_step_f_latch_int;
reg signed [30:0] m_manager_0_set_wait_latch_int;
reg m_manager_0_frequency_controller_en;
reg m_manager_0_waiter_en;
reg m_manager_0_quit;
reg m_manager_0_start_holding;
reg m_manager_0_quit_turnedon;
reg m_manager_0_start_holding_turnedon;
reg [1:0] m_manager_0_state;
reg m_manager_0_add_o_int;
reg m_manager_0_sub_o_int;
reg m_manager_0_start_time;
reg m_manager_0_t_step_clk;
reg [29:0] m_manager_0_delta_freq;
reg [0:0] m_manager_0_direction;
reg m_manager_0_dec_clk_en;
wire m_manager_0_freq_controller_clk;
wire m_manager_0_waiter_clk;
reg m_manager_0_quitold;
reg m_manager_0_start_holdingold;
reg [29:0] m_manager_0_half_period;
reg [29:0] m_manager_0_t_step_counter;
wire [35:0] m_dec_0_q_int;
reg signed [30:0] m_dec_0_bq_int;
reg [29:0] m_dec_0_increment;
wire uart_0_baud;
wire uart_0_slowbaud;
wire uart_0_slowbaud_rst;
reg uart_0_started;
reg [2:0] uart_0_bauds_held_down;
reg [4:0] uart_0_bits_received;
wire uart_0_drdy_int;
reg uart_0_latch_en;
reg uart_0_drdy1;
reg uart_0_drdy2;
wire [7:0] uart_0_rx_data_int;
reg uart_0_clkdiv_0_clk_new;
reg [7:0] uart_0_clkdiv_0_counter;
reg uart_0_clkdiv_1_clk_new;
reg [2:0] uart_0_clkdiv_1_counter;
wire [7:0] uart_0_shiftreg_0_par_int;
reg uart_0_shiftreg_0_clk_int;
reg bussedram_0_rambus_we;
reg bussedram_1_rambus_we;
reg bussedram_2_rambus_we;
reg bussedram_3_rambus_we;
reg comms_arbiter_0_delayed_reset1;
reg comms_arbiter_0_delayed_reset2;
reg [7:0] comms_arbiter_0_latch_counter;
reg comms_arbiter_0_drdy_turnedon;
reg comms_arbiter_0_drdy_old;

reg biggestblock_l [0:32-1];
reg m_dec_0_to_subtract [0:9-1];
reg m_dec_0_to_add [0:9-1];
reg [3:0] m_dec_0_q_int_l [0:9-1];
reg uart_0_shiftreg_0_latches [0:8-1];
reg [31:0] bussedram_0_mem [0:128-1];
reg [31:0] bussedram_1_mem [0:128-1];
reg [31:0] bussedram_2_mem [0:128-1];
reg [31:0] bussedram_3_mem [0:128-1];

assign reset = 1'd0;

assign biggestblock[31] = biggestblock_l[31];
assign biggestblock[30] = biggestblock_l[30];
assign biggestblock[29] = biggestblock_l[29];
assign biggestblock[28] = biggestblock_l[28];
assign biggestblock[27] = biggestblock_l[27];
assign biggestblock[26] = biggestblock_l[26];
assign biggestblock[25] = biggestblock_l[25];
assign biggestblock[24] = biggestblock_l[24];
assign biggestblock[23] = biggestblock_l[23];
assign biggestblock[22] = biggestblock_l[22];
assign biggestblock[21] = biggestblock_l[21];
assign biggestblock[20] = biggestblock_l[20];
assign biggestblock[19] = biggestblock_l[19];
assign biggestblock[18] = biggestblock_l[18];
assign biggestblock[17] = biggestblock_l[17];
assign biggestblock[16] = biggestblock_l[16];
assign biggestblock[15] = biggestblock_l[15];
assign biggestblock[14] = biggestblock_l[14];
assign biggestblock[13] = biggestblock_l[13];
assign biggestblock[12] = biggestblock_l[12];
assign biggestblock[11] = biggestblock_l[11];
assign biggestblock[10] = biggestblock_l[10];
assign biggestblock[9] = biggestblock_l[9];
assign biggestblock[8] = biggestblock_l[8];
assign biggestblock[7] = biggestblock_l[7];
assign biggestblock[6] = biggestblock_l[6];
assign biggestblock[5] = biggestblock_l[5];
assign biggestblock[4] = biggestblock_l[4];
assign biggestblock[3] = biggestblock_l[3];
assign biggestblock[2] = biggestblock_l[2];
assign biggestblock[1] = biggestblock_l[1];
assign biggestblock[0] = biggestblock_l[0];
assign m_dec_0_q_int[36-1:32] = m_dec_0_q_int_l[8];
assign m_dec_0_q_int[32-1:28] = m_dec_0_q_int_l[7];
assign m_dec_0_q_int[28-1:24] = m_dec_0_q_int_l[6];
assign m_dec_0_q_int[24-1:20] = m_dec_0_q_int_l[5];
assign m_dec_0_q_int[20-1:16] = m_dec_0_q_int_l[4];
assign m_dec_0_q_int[16-1:12] = m_dec_0_q_int_l[3];
assign m_dec_0_q_int[12-1:8] = m_dec_0_q_int_l[2];
assign m_dec_0_q_int[8-1:4] = m_dec_0_q_int_l[1];
assign m_dec_0_q_int[4-1:0] = m_dec_0_q_int_l[0];
assign uart_0_shiftreg_0_par_int[7] = uart_0_shiftreg_0_latches[0];
assign uart_0_shiftreg_0_par_int[6] = uart_0_shiftreg_0_latches[1];
assign uart_0_shiftreg_0_par_int[5] = uart_0_shiftreg_0_latches[2];
assign uart_0_shiftreg_0_par_int[4] = uart_0_shiftreg_0_latches[3];
assign uart_0_shiftreg_0_par_int[3] = uart_0_shiftreg_0_latches[4];
assign uart_0_shiftreg_0_par_int[2] = uart_0_shiftreg_0_latches[5];
assign uart_0_shiftreg_0_par_int[1] = uart_0_shiftreg_0_latches[6];
assign uart_0_shiftreg_0_par_int[0] = uart_0_shiftreg_0_latches[7];

